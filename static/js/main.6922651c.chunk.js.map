{"version":3,"sources":["components/JustinCard/index.js","components/Wrapper/index.js","components/Navbar/index.js","App.js","reportWebVitals.js","index.js"],"names":["JustinCard","props","className","alt","name","src","image","onClick","checkJustin","id","Wrapper","children","Navbar","score","topscore","message","App","state","justins","shuffle","array","sort","Math","random","reset","i","length","clicked","setState","endGame","winGame","topScore","this","map","justin","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+uEAWeA,MARf,SAAoBC,GAClB,OACI,qBAAKC,UAAU,gBAAf,SACE,qBAAKC,IAAKF,EAAMG,KAAMC,IAAKJ,EAAMK,MAAOC,QAAS,kBAAMN,EAAMO,YAAYP,EAAMQ,U,MCCxEC,MAJf,SAAiBT,GACf,OAAO,qBAAKC,UAAU,UAAf,SAA0BD,EAAMU,Y,MCW1BC,MAZf,SAAgBX,GACZ,OACI,sBAAKC,UAAU,gDAAf,UACI,qBAAKA,UAAU,WAAf,qCACA,sBAAKA,UAAU,WAAf,oBAAkCD,EAAMY,SACxC,sBAAKX,UAAU,WAAf,wBAAsCD,EAAMa,YAC5C,qBAAKZ,UAAU,WAAf,SAA2BD,EAAMc,c,OCuF9BC,G,kNAvFbC,MAAQ,CACNC,UACAH,QAAS,iCACTF,MAAO,EACPC,SAAU,G,EAGZK,QAAU,SAACC,GAAD,OAAWA,EAAMC,MAAK,kBAAMC,KAAKC,SAAW,O,EAEtDC,MAAQ,SAACN,GACP,IAAK,IAAIO,EAAI,EAAGA,EAAIP,EAAQQ,OAAQD,IAClCP,EAAQO,GAAGE,SAAU,EAEvB,EAAKC,SAAS,CACZV,a,EAIJW,QAAU,WACR,EAAKD,SAAS,CACZV,UACAH,QAAS,0CACTF,MAAO,IAET,EAAKW,MAAMN,I,EAGbY,QAAU,WACR,EAAKF,SAAS,CACZV,UACAH,QAAS,yCACTF,MAAO,IAET,EAAKW,MAAMN,I,EAGba,SAAW,SAAClB,GACV,GAAI,EAAKI,MAAMH,UAAYD,EAAQ,EACjC,OAAO,G,EAIXL,YAAc,SAAAC,GAIZ,GAHyB,KAArB,EAAKQ,MAAMJ,OACb,EAAKiB,WAEyB,IAA5BZ,EAAQT,EAAK,GAAGkB,QAalB,OAZAT,EAAQT,EAAK,GAAGkB,SAAU,EAC1B,EAAKR,QAAQD,GACb,EAAKU,SAAS,CACZV,UACAH,QAAS,yBACTF,MAAO,EAAKI,MAAMJ,MAAQ,IAExB,EAAKI,MAAMH,UAAY,EAAKG,MAAMJ,OACpC,EAAKe,SAAS,CACZd,SAAU,EAAKG,MAAMH,SAAW,IAG7BI,EAAQT,EAAK,GAAGkB,QAEzB,EAAKE,W,uDAGG,IAAD,OACP,OACE,cAAC,IAAD,UACE,gCACE,cAAC,EAAD,CACEd,QAASiB,KAAKf,MAAMF,QACpBF,MAAOmB,KAAKf,MAAMJ,MAClBC,SAAUkB,KAAKf,MAAMH,WAEvB,cAAC,EAAD,UACGkB,KAAKf,MAAMC,QAAQe,KAAI,SAAAC,GAAM,OAC5B,cAAC,EAAD,aACE1B,YAAa,EAAKA,aACd0B,kB,GA9EFC,IAAMC,YCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6922651c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction JustinCard(props) {\n  return (\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} onClick={() => props.checkJustin(props.id)}/>\n    </div>\n  );\n}\n\nexport default JustinCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Navbar(props) {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <div className=\"nav-item\">A Collection of Justins</div>\n            <div className=\"nav-item\">Score: {props.score}</div>\n            <div className=\"nav-item\">Top Score: {props.topscore}</div>\n            <div className=\"nav-item\">{props.message}</div>\n        </nav>\n    );\n\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport JustinCard from \"./components/JustinCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Navbar from \"./components/Navbar\";\nimport justins from \"./justins.json\";\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    justins,\n    message: \"Click a Justin to get started!\",\n    score: 0,\n    topscore: 0\n  };\n\n  shuffle = (array) => array.sort(() => Math.random() - 0.5);\n\n  reset = (justins) => {\n    for (var i = 0; i < justins.length; i++) {\n      justins[i].clicked = false;\n    }\n    this.setState({\n      justins\n    });\n  }\n\n  endGame = () => {\n    this.setState({\n      justins,\n      message: \"You lose! Click a Justin to play again!\",\n      score: 0\n    });\n    this.reset(justins);\n  }\n\n  winGame = () => {\n    this.setState({\n      justins,\n      message: \"You win! Click a Justin to play again!\",\n      score: 0\n    });\n    this.reset(justins);\n  }\n\n  topScore = (score) => {\n    if (this.state.topscore <= score - 1) {\n      return true;\n    }\n  }\n\n  checkJustin = id => {\n    if (this.state.score === 12) {\n      this.winGame();\n    }\n    if (justins[id - 1].clicked === false) {\n      justins[id - 1].clicked = true;\n      this.shuffle(justins);\n      this.setState({\n        justins,\n        message: \"You guessed correctly!\",\n        score: this.state.score + 1,\n      });\n      if (this.state.topscore <= this.state.score) {\n        this.setState({\n          topscore: this.state.topscore + 1\n        });\n      }\n      return justins[id - 1].clicked;\n    }\n    this.endGame();\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Navbar\n            message={this.state.message}\n            score={this.state.score}\n            topscore={this.state.topscore}\n          />\n          <Wrapper>\n            {this.state.justins.map(justin => (\n              <JustinCard\n                checkJustin={this.checkJustin}\n                {...justin}\n              />\n            ))}\n          </Wrapper>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}