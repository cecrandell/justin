{"version":3,"sources":["components/JustinCard/index.js","components/Wrapper/index.js","components/Navbar/index.js","App.js","reportWebVitals.js","index.js"],"names":["JustinCard","props","className","alt","name","src","image","onClick","checkJustin","id","Wrapper","children","Navbar","score","topscore","message","App","state","justins","shuffle","data","i","length","j","Math","floor","random","temp","reset","resetData","map","item","clicked","guessedCorrectly","newData","newItem","newScore","newTopScore","max","setState","this","justin","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+uEAWeA,MARf,SAAoBC,GAClB,OACI,qBAAKC,UAAU,gBAAf,SACE,qBAAKC,IAAKF,EAAMG,KAAMC,IAAKJ,EAAMK,MAAOC,QAAS,kBAAMN,EAAMO,YAAYP,EAAMQ,U,MCCxEC,MAJf,SAAiBT,GACf,OAAO,qBAAKC,UAAU,UAAf,SAA0BD,EAAMU,Y,MCW1BC,MAZf,SAAgBX,GACZ,OACI,sBAAKC,UAAU,gDAAf,UACI,qBAAKA,UAAU,WAAf,qCACA,sBAAKA,UAAU,WAAf,oBAAkCD,EAAMY,SACxC,sBAAKX,UAAU,WAAf,wBAAsCD,EAAMa,YAC5C,qBAAKZ,UAAU,WAAf,SAA2BD,EAAMc,c,QCuF9BC,G,kNAvFbC,MAAQ,CACNC,UACAH,QAAS,iCACTF,MAAO,EACPC,SAAU,G,EAGZK,QAAU,SAAAC,GAER,IADA,IAAIC,EAAID,EAAKE,OAAS,EACfD,EAAI,GAAG,CACZ,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCM,EAAOP,EAAKC,GAClBD,EAAKC,GAAKD,EAAKG,GACfH,EAAKG,GAAKI,EACVN,IAEF,OAAOD,G,EAGTQ,MAAQ,SAACV,GACP,IAAMW,EAAYX,EAAQY,KAAI,SAAAC,GAAI,kCAAUA,GAAV,IAAgBC,SAAS,OAC3D,OAAO,EAAKb,QAAQU,I,EAGtBrB,YAAc,SAAAC,GACZ,IAAIwB,GAAmB,EACjBC,EAAU,EAAKjB,MAAMC,QAAQY,KAAI,SAAAC,GACrC,IAAMI,EAAO,eAAQJ,GAOrB,OANII,EAAQ1B,KAAOA,IACZ0B,EAAQH,UACXG,EAAQH,SAAU,EAClBC,GAAmB,IAGhBE,KAET,IAAyB,IAArBF,EAA2B,CAAC,IAAD,EACD,EAAKhB,MAAzBH,EADqB,EACrBA,SACFsB,EAFuB,EACXvB,MACO,EACnBwB,EAAcb,KAAKc,IAAIF,EAAUtB,GACtB,KAAbsB,EACF,EAAKG,SAAS,CACZrB,QAAS,EAAKU,MAAMM,GACpBnB,QAAS,WACTF,MAAO,EACPC,SAAUuB,IAGZ,EAAKE,SAAS,CACZrB,QAAS,EAAKC,QAAQe,GACtBnB,QAAS,yBACTF,MAAOuB,EACPtB,SAAUuB,SAId,EAAKE,SAAS,CACZrB,QAAS,EAAKU,MAAMM,GACpBnB,QAAS,0CACTF,MAAO,K,uDAKH,IAAD,OACP,OACE,cAAC,IAAD,UACE,gCACE,cAAC,EAAD,CACEE,QAASyB,KAAKvB,MAAMF,QACpBF,MAAO2B,KAAKvB,MAAMJ,MAClBC,SAAU0B,KAAKvB,MAAMH,WAEvB,cAAC,EAAD,UACG0B,KAAKvB,MAAMC,QAAQY,KAAI,SAAAW,GAAM,OAC5B,cAAC,EAAD,aACEjC,YAAa,EAAKA,aACdiC,kB,GA9EFC,IAAMC,YCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5f6096ae.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction JustinCard(props) {\n  return (\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} onClick={() => props.checkJustin(props.id)}/>\n    </div>\n  );\n}\n\nexport default JustinCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Navbar(props) {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <div className=\"nav-item\">A Collection of Justins</div>\n            <div className=\"nav-item\">Score: {props.score}</div>\n            <div className=\"nav-item\">Top Score: {props.topscore}</div>\n            <div className=\"nav-item\">{props.message}</div>\n        </nav>\n    );\n\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport JustinCard from \"./components/JustinCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Navbar from \"./components/Navbar\";\nimport justins from \"./justins.json\";\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    justins,\n    message: \"Click a Justin to get started!\",\n    score: 0,\n    topscore: 0\n  };\n\n  shuffle = data => {\n    let i = data.length - 1;\n    while (i > 0) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = data[i];\n      data[i] = data[j];\n      data[j] = temp;\n      i--;\n    }\n    return data;\n  };\n\n  reset = (justins) => {\n    const resetData = justins.map(item => ({ ...item, clicked: false }));\n    return this.shuffle(resetData);\n  };\n\n  checkJustin = id => {\n    let guessedCorrectly = false;\n    const newData = this.state.justins.map(item => {\n      const newItem = { ...item };\n      if (newItem.id === id) {\n        if (!newItem.clicked) {\n          newItem.clicked = true;\n          guessedCorrectly = true;\n        }\n      }\n      return newItem;\n    });\n    if (guessedCorrectly === true) {\n      const { topscore, score } = this.state;\n      const newScore = score + 1;\n      const newTopScore = Math.max(newScore, topscore);\n      if (newScore === 12) {\n        this.setState({\n          justins: this.reset(newData),\n          message: \"You won!\",\n          score: 0,\n          topscore: newTopScore\n        });\n      } else {\n        this.setState({\n          justins: this.shuffle(newData),\n          message: \"You guessed correctly!\",\n          score: newScore,\n          topscore: newTopScore\n        });\n      }\n    } else {\n      this.setState({\n        justins: this.reset(newData),\n        message: \"You lose! Click a Justin to play again!\",\n        score: 0\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Navbar\n            message={this.state.message}\n            score={this.state.score}\n            topscore={this.state.topscore}\n          />\n          <Wrapper>\n            {this.state.justins.map(justin => (\n              <JustinCard\n                checkJustin={this.checkJustin}\n                {...justin}\n              />\n            ))}\n          </Wrapper>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}